class BankAccount:
    def __init__(self, username, password, balance=0):
        self.username = username
        self.password = password
        self.balance = balance
        self.authenticated = False

    def authenticate(self, username, password):
        if self.username == username and self.password == password:
            self.authenticated = True

    def deposit(self, amount):
        if not self.authenticated:
            raise Exception("Not authenticated")
        if amount <= 0:
            raise Exception("Deposit must be positive")
        self.balance += amount

    def withdraw(self, amount):
        if not self.authenticated:
            raise Exception("Not authenticated")
        if amount <= 0:
            raise Exception("Withdraw must be positive")
        self.balance -= amount

class MinimumBalanceAccount(BankAccount):
    def __init__(self, username, password, balance=0, minimum_balance=0):
        super().__init__(username, password, balance)
        self.minimum_balance = minimum_balance

    def withdraw(self, amount):
        if not self.authenticated:
            raise Exception("Not authenticated")
        if amount <= 0:
            raise Exception("Withdraw must be positive")
        if self.balance - amount < self.minimum_balance:
            raise Exception("Cannot go below minimum balance")
        self.balance -= amount

class ATM:
    def __init__(self, account_list, try_limit):
        if not all(isinstance(acc, BankAccount) for acc in account_list):
            raise Exception("All accounts must be BankAccount instances")
        if not isinstance(try_limit, int) or try_limit <= 0:
            try_limit = 2
        self.account_list = account_list
        self.try_limit = try_limit
        self.current_tries = 0
        self.show_main_menu()

    def show_main_menu(self):
        while True:
            print("\n1. Log in\n2. Exit")
            choice = input("Choose: ")
            if choice == "1":
                username = input("Username: ")
                password = input("Password: ")
                self.log_in(username, password)
            elif choice == "2":
                print("Goodbye")
                break

    def log_in(self, username, password):
        for account in self.account_list:
            account.authenticate(username, password)
            if account.authenticated:
                print("Login successful")
                self.show_account_menu(account)
                return
        self.current_tries += 1
        print("Login failed")
        if self.current_tries >= self.try_limit:
            print("Max tries reached. Shutting down.")
            exit()

    def show_account_menu(self, account):
        while True:
            print(f"\nBalance: {account.balance}")
            print("1. Deposit\n2. Withdraw\n3. Exit")
            choice = input("Choose: ")
            if choice == "1":
                amount = int(input("Amount: "))
                try:
                    account.deposit(amount)
                except Exception as e:
                    print(e)
            elif choice == "2":
                amount = int(input("Amount: "))
                try:
                    account.withdraw(amount)
                except Exception as e:
                    print(e)
            elif choice == "3":
                break
a1 = BankAccount("alice", "pass", 100)
a2 = MinimumBalanceAccount("bob", "1234", 200, 50)

ATM([a1, a2], 3)
